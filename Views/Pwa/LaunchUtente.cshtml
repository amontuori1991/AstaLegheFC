@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="it">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <title>Avvio…</title>

    <!-- PWA -->
    <meta name="theme-color" content="#2c3e50" />
    <link rel="manifest" href="/pwa/manifest-utente">

    <!-- iOS A2HS -->
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
    <meta name="apple-mobile-web-app-title" content="Fantabazzer">
    <link rel="apple-touch-icon" href="/images/icons/icon-192x192.png">

    <style>
        html, body {
            height: 100%
        }

        body {
            margin: 0;
            display: flex;
            align-items: center;
            justify-content: center;
            background: #2c3e50;
            color: #ecf0f1;
            font-family: system-ui,-apple-system,Segoe UI,Roboto,Ubuntu,Cantarell,Noto Sans,sans-serif
        }

        .box {
            max-width: 420px;
            width: 92%
        }

        .fld {
            padding: 10px;
            border-radius: 6px;
            border: 1px solid #34495e;
            background: #1f2a39;
            color: #fff
        }

        .btn {
            padding: 10px 14px;
            border-radius: 8px;
            border: 0;
            background: #3498db;
            color: #fff;
            font-weight: 700;
            cursor: pointer
        }

        .stack {
            display: flex;
            flex-direction: column;
            gap: 10px
        }
    </style>
</head>
<body>
    <div id="app" class="box">Avvio asta…</div>

    <script>
        // ---- helper cookie ----
        function setCookie(name, value, days){
          const maxAge = days ? `; max-age=${days*24*60*60}` : '';
          document.cookie = `${name}=${encodeURIComponent(value)}; path=/${maxAge}`;
        }
        function getCookie(name){
          const m = document.cookie.match(new RegExp('(?:^|; )' + name.replace(/[-./*+?^${}()|[\]\\]/g,'\\$&') + '=([^;]*)'));
          return m ? decodeURIComponent(m[1]) : null;
        }

        function saveCreds(lega, nick){
          try{ localStorage.setItem('pwa:lega', lega); localStorage.setItem('pwa:nick', nick); }catch{}
          setCookie('pwa_lega', lega, 365);
          setCookie('pwa_nick', nick, 365);
        }
        function readCreds(){
          // 1) query
          try{
            const u = new URL(location.href);
            const legaQ = u.searchParams.get('lega');
            const nickQ = u.searchParams.get('nick');
            if (legaQ && nickQ) return {lega:legaQ, nick:nickQ};
          }catch{}
          // 2) localStorage
          try{
            const legaL = localStorage.getItem('pwa:lega');
            const nickL = localStorage.getItem('pwa:nick');
            if (legaL && nickL) return {lega:legaL, nick:nickL};
          }catch{}
          // 3) cookie
          const legaC = getCookie('pwa_lega');
          const nickC = getCookie('pwa_nick');
          if (legaC && nickC) return {lega:legaC, nick:nickC};
          return null;
        }

        (function () {
          try {
            const credsFromQuery = (()=>{
              try{
                const u = new URL(location.href);
                const legaQ = u.searchParams.get('lega');
                const nickQ = u.searchParams.get('nick');
                return (legaQ && nickQ) ? {lega:legaQ, nick:nickQ} : null;
              }catch{ return null; }
            })();

            if (credsFromQuery){
              // Se arriviamo con query, salviamo subito e rediriggiamo
              saveCreds(credsFromQuery.lega, credsFromQuery.nick);
              location.replace(`/Utente?lega=${encodeURIComponent(credsFromQuery.lega)}&nick=${encodeURIComponent(credsFromQuery.nick)}`);
              return;
            }

            const creds = readCreds();
            if (creds && creds.lega && creds.nick){
              location.replace(`/Utente?lega=${encodeURIComponent(creds.lega)}&nick=${encodeURIComponent(creds.nick)}`);
              return;
            }

            // Fallback: chiedi una sola volta
            document.getElementById('app').innerHTML = `
              <div class="stack">
                <h2>Completa i dati</h2>
                <input id="lega" class="fld" placeholder="Alias lega" autocomplete="off" />
                <input id="nick" class="fld" placeholder="Nickname" autocomplete="off" />
                <button id="go" class="btn">Entra</button>
              </div>`;
            document.getElementById('go').onclick = function () {
              const l = document.getElementById('lega').value.trim();
              const n = document.getElementById('nick').value.trim();
              if (!l || !n) { alert('Inserisci lega e nick'); return; }
              saveCreds(l, n);
              location.assign(`/Utente?lega=${encodeURIComponent(l)}&nick=${encodeURIComponent(n)}`);
            };
          } catch (e) {
            console.error(e);
            document.getElementById('app').textContent = 'Errore di avvio. Apri dal browser e aggiungi di nuovo alla Home.';
          }
        })();
    </script>
</body>
</html>
