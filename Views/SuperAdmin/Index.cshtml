@using AstaLegheFC.Models
@model AstaLegheFC.Models.ViewModels.SuperAdminIndexViewModel
@{
    ViewData["Title"] = "Super Admin – Licenze & Storico";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string fmt(DateTimeOffset? d) => d.HasValue ? d.Value.ToString("yyyy-MM-dd") : "Per sempre";
}

<style>
    /* ---------- Leggibilità tabelle su tema scuro (sezione licenze) ---------- */
    .dm-fix {
        --tbl-text: #212529;
        --tbl-bg: #ffffff;
        --tbl-bg-alt: #f6f8fa;
        --tbl-hover: #eef2f6;
    }
    .dm-fix .table { color: var(--tbl-text) !important; }
    .dm-fix thead th { color: var(--tbl-text) !important; background-color: #f8f9fa !important; }
    .dm-fix tbody td, .dm-fix tbody th { color: var(--tbl-text) !important; background-color: var(--tbl-bg) !important; }
    .dm-fix tbody tr:nth-child(even) td, .dm-fix tbody tr:nth-child(even) th { background-color: var(--tbl-bg-alt) !important; }
    .dm-fix.table-hover tbody tr:hover td, .dm-fix.table-hover tbody tr:hover th { background-color: var(--tbl-hover) !important; }
    .dm-fix .form-control, .dm-fix .form-select { background: #fff !important; color: var(--tbl-text) !important; border-color: #ced4da !important; }

    /* ---------- Header collassabile (licenze) ---------- */
    .section-toggle {
        border: 0; width: 100%; text-align: left; padding: .75rem 1rem;
        display: flex; align-items: center; justify-content: space-between; cursor: pointer;
    }
    .section-toggle .left { display: inline-flex; align-items: center; gap: .5rem; }
    .chev { display: inline-block; transition: transform .2s ease; font-weight: 700; }
    .section-toggle[aria-expanded="false"] .chev { transform: rotate(-90deg); }
    .card-header.bg-warning { color: #212529; } /* contrasto su giallo */
    .col-actions { width: 480px; }
    @@media (max-width: 992px){ .col-actions{ width: 100%; } }
    .plan-select { min-width: 120px; }

    /* ---------- Storico Aste: badge ruoli ---------- */
    .role-badge {
        display:inline-flex; align-items:center; justify-content:center;
        width:32px; height:32px; border-radius:8px; font-weight:800; color:#fff;
    }
    .role-P{ background:#d9822b; } /* arancione */
    .role-D{ background:#2da44e; } /* verde */
    .role-C{ background:#2563eb; } /* blu */
    .role-A{ background:#c0353a; } /* rosso */

    /* ---------- Storico Aste: tabella dark per rose ---------- */
    .sa-dark thead th{
        background-color:#0f172a !important; color:#fff !important; border-color:#334155 !important;
    }
    .sa-dark .table, .sa-dark .table th, .sa-dark .table td{
        background-color:#1f2a39 !important; color:#fff !important; border-color:#334155 !important;
    }
    .sa-dark .table-striped>tbody>tr:nth-of-type(odd)>*{
        background-color:#233041 !important;
    }
    .sa-dark a{ color:#e5e7eb !important; }
    .sa-dark .text-muted{ color:#cbd5e1 !important; opacity:1 !important; }

    /* ---------- Storico Aste: layout ---------- */
    .adm-card + .adm-card{ margin-top:1rem; }
    .league-head-badges{ display:flex; gap:.5rem; flex-wrap:wrap; align-items:center; }
    .grid-roles{ display:grid; grid-template-columns:repeat(4,1fr); gap:12px; }
    @@media (max-width: 992px){ .grid-roles{ grid-template-columns:repeat(2,1fr); } }
    @@media (max-width: 576px){ .grid-roles{ grid-template-columns:1fr; } }
    .mini-pill{ background:#111827; color:#fff; border-radius:999px; padding:.25rem .6rem; font-weight:700; }
</style>

<div class="container my-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h3 class="mb-0">Gestione licenze</h3>
        <form method="post" asp-action="Logout">
            @Html.AntiForgeryToken()
            <button class="btn btn-outline-secondary">Esci</button>
        </form>
    </div>

    @if (TempData["ok"] != null){ <div class="alert alert-success">@TempData["ok"]</div> }
    @if (TempData["err"] != null){ <div class="alert alert-danger">@TempData["err"]</div> }

    <div id="lic-accordion" class="row g-4">
        <!-- === ATTIVI === -->
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-header p-0">
                    <button class="section-toggle bg-success text-white" type="button"
                            data-bs-toggle="collapse" data-bs-target="#secActive"
                            aria-expanded="true" aria-controls="secActive">
                        <div class="left">
                            <span class="chev">▾</span>
                            <strong>Utenti attivi</strong>
                            <span class="badge bg-dark text-white">@Model.Active.Count</span>
                        </div>
                        <small class="opacity-75">tocca per comprimere/espandere</small>
                    </button>
                </div>
                <div id="secActive" class="collapse show" data-bs-parent="#lic-accordion">
                    <div class="card-body p-0">
                        @if (Model.Active.Count == 0)
                        {
                            <div class="p-3 text-muted">Nessun utente attivo.</div>
                        }
                        else
                        {
                            <div class="table-responsive">
                                <table class="table table-hover align-middle mb-0 dm-fix">
                                    <thead class="table-light">
                                        <tr>
                                            <th>Email</th>
                                            <th>Username</th>
                                            <th>Scadenza</th>
                                            <th class="col-actions">Modifica</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                    @foreach (var u in Model.Active)
                                    {
                                        var dateId = $"date_{u.Id}";
                                        var planId = $"plan_{u.Id}";
                                        <tr>
                                            <td>@u.Email</td>
                                            <td>@u.UserName</td>
                                            <td>@fmt(u.LicenseExpiresAt)</td>
                                            <td>
                                                <form method="post" asp-action="UpdateLicense" class="d-flex flex-wrap gap-2 align-items-center">
                                                    @Html.AntiForgeryToken()
                                                    <input type="hidden" name="userId" value="@u.Id" />
                                                    <select id="@planId" class="form-select plan-select" onchange="applyPlanToDate(this, '@dateId')">
                                                        <option value="">Piano…</option>
                                                        <option value="1M">1 M</option>
                                                        <option value="6M">6 M</option>
                                                        <option value="12M">12 M</option>
                                                        <option value="LIFE">A vita</option>
                                                    </select>
                                                    <input id="@dateId" type="date" name="newDate" class="form-control"
                                                           value="@(u.LicenseExpiresAt.HasValue? u.LicenseExpiresAt.Value.ToString("yyyy-MM-dd") : "")"
                                                           placeholder="yyyy-mm-dd" />
                                                    <button class="btn btn-primary">Salva</button>
                                                    <button type="button" class="btn btn-outline-secondary"
                                                            onclick="setForever('@planId', '@dateId'); this.form.submit();">
                                                        Per sempre
                                                    </button>
                                                </form>
                                            </td>
                                        </tr>
                                    }
                                    </tbody>
                                </table>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- === IN SCADENZA === -->
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-header p-0">
                    <button class="section-toggle bg-warning" type="button"
                            data-bs-toggle="collapse" data-bs-target="#secExpiring"
                            aria-expanded="false" aria-controls="secExpiring">
                        <div class="left">
                            <span class="chev">▾</span>
                            <strong>Utenti in scadenza (entro 7 giorni)</strong>
                            <span class="badge bg-dark text-white">@Model.Expiring.Count</span>
                        </div>
                        <small class="opacity-75 text-dark">tocca per comprimere/espandere</small>
                    </button>
                </div>
                <div id="secExpiring" class="collapse" data-bs-parent="#lic-accordion">
                    <div class="card-body p-0">
                        @if (Model.Expiring.Count == 0)
                        {
                            <div class="p-3 text-muted">Nessun utente in scadenza entro una settimana.</div>
                        }
                        else
                        {
                            <div class="table-responsive">
                                <table class="table table-hover align-middle mb-0 dm-fix">
                                    <thead class="table-light">
                                        <tr>
                                            <th>Email</th>
                                            <th>Username</th>
                                            <th>Scadenza</th>
                                            <th class="col-actions">Modifica</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                    @foreach (var u in Model.Expiring)
                                    {
                                        var dateId = $"date_{u.Id}";
                                        var planId = $"plan_{u.Id}";
                                        <tr>
                                            <td>@u.Email</td>
                                            <td>@u.UserName</td>
                                            <td>@fmt(u.LicenseExpiresAt)</td>
                                            <td>
                                                <form method="post" asp-action="UpdateLicense" class="d-flex flex-wrap gap-2 align-items-center">
                                                    @Html.AntiForgeryToken()
                                                    <input type="hidden" name="userId" value="@u.Id" />
                                                    <select id="@planId" class="form-select plan-select" onchange="applyPlanToDate(this, '@dateId')">
                                                        <option value="">Piano…</option>
                                                        <option value="1M">1 M</option>
                                                        <option value="6M">6 M</option>
                                                        <option value="12M">12 M</option>
                                                        <option value="LIFE">A vita</option>
                                                    </select>
                                                    <input id="@dateId" type="date" name="newDate" class="form-control"
                                                           value="@(u.LicenseExpiresAt.HasValue? u.LicenseExpiresAt.Value.ToString("yyyy-MM-dd") : "")"
                                                           placeholder="yyyy-mm-dd" />
                                                    <button class="btn btn-primary">Salva</button>
                                                    <button type="button" class="btn btn-outline-secondary"
                                                            onclick="setForever('@planId', '@dateId'); this.form.submit();">
                                                        Per sempre
                                                    </button>
                                                </form>
                                            </td>
                                        </tr>
                                    }
                                    </tbody>
                                </table>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- === SCADUTI === -->
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-header p-0">
                    <button class="section-toggle bg-danger text-white" type="button"
                            data-bs-toggle="collapse" data-bs-target="#secExpired"
                            aria-expanded="false" aria-controls="secExpired">
                        <div class="left">
                            <span class="chev">▾</span>
                            <strong>Utenti scaduti</strong>
                            <span class="badge bg-dark text-white">@Model.Expired.Count</span>
                        </div>
                        <small class="opacity-75">tocca per comprimere/espandere</small>
                    </button>
                </div>
                <div id="secExpired" class="collapse" data-bs-parent="#lic-accordion">
                    <div class="card-body p-0">
                        @if (Model.Expired.Count == 0)
                        {
                            <div class="p-3 text-muted">Nessun utente scaduto.</div>
                        }
                        else
                        {
                            <div class="table-responsive">
                                <table class="table table-hover align-middle mb-0 dm-fix">
                                    <thead class="table-light">
                                        <tr>
                                            <th>Email</th>
                                            <th>Username</th>
                                            <th>Scadenza</th>
                                            <th class="col-actions">Modifica</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                    @foreach (var u in Model.Expired)
                                    {
                                        var dateId = $"date_{u.Id}";
                                        var planId = $"plan_{u.Id}";
                                        <tr>
                                            <td>@u.Email</td>
                                            <td>@u.UserName</td>
                                            <td>@fmt(u.LicenseExpiresAt)</td>
                                            <td>
                                                <form method="post" asp-action="UpdateLicense" class="d-flex flex-wrap gap-2 align-items-center">
                                                    @Html.AntiForgeryToken()
                                                    <input type="hidden" name="userId" value="@u.Id" />
                                                    <select id="@planId" class="form-select plan-select" onchange="applyPlanToDate(this, '@dateId')">
                                                        <option value="">Piano…</option>
                                                        <option value="1M">1 M</option>
                                                        <option value="6M">6 M</option>
                                                        <option value="12M">12 M</option>
                                                        <option value="LIFE">A vita</option>
                                                    </select>
                                                    <input id="@dateId" type="date" name="newDate" class="form-control"
                                                           value="@(u.LicenseExpiresAt.HasValue? u.LicenseExpiresAt.Value.ToString("yyyy-MM-dd") : "")"
                                                           placeholder="yyyy-mm-dd" />
                                                    <button class="btn btn-primary">Salva</button>
                                                    <button type="button" class="btn btn-outline-secondary"
                                                            onclick="setForever('@planId', '@dateId'); this.form.submit();">
                                                        Per sempre
                                                    </button>
                                                </form>
                                            </td>
                                        </tr>
                                    }
                                    </tbody>
                                </table>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- ======================= STORICO ASTE ======================= -->
    <div class="mt-5">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h3 class="mb-0">Storico aste</h3>
            <div class="d-flex align-items-center gap-2">
                <span class="badge bg-primary">Totale leghe: <span id="tot-aste">0</span></span>
                <button id="btnReloadStorico" class="btn btn-outline-secondary btn-sm">Ricarica</button>
            </div>
        </div>

        <div id="storico-loading" class="text-muted mb-2" style="display:none;">Caricamento…</div>
        <div id="storico-root"></div>
    </div>
</div>

@section Scripts {
<script>
/* ===== util ===== */
function toYMD(d){ const y=d.getUTCFullYear(), m=String(d.getUTCMonth()+1).padStart(2,'0'), da=String(d.getUTCDate()).padStart(2,'0'); return `${y}-${m}-${da}`; }
function addMonthsUTC(base,n){
  const y=base.getUTCFullYear(), m=base.getUTCMonth(), d=base.getUTCDate();
  const lastDay=new Date(Date.UTC(y,m+n+1,0)).getUTCDate(); return new Date(Date.UTC(y,m+n, Math.min(d,lastDay)));
}
function applyPlanToDate(sel, dateInputId){
  const plan=sel.value, dateEl=document.getElementById(dateInputId); if(!dateEl) return;
  if(plan==='LIFE'){ dateEl.value=''; return; }
  const today=new Date(); const baseUTC=new Date(Date.UTC(today.getFullYear(),today.getMonth(),today.getDate()));
  const months = plan==='1M'?1: plan==='6M'?6: plan==='12M'?12: 0; if(!months) return;
  dateEl.value = toYMD(addMonthsUTC(baseUTC, months));
}
function setForever(planId, dateId){ const sel=document.getElementById(planId), d=document.getElementById(dateId); if(sel) sel.value='LIFE'; if(d) d.value=''; }
function slugTeam(name){ return (name||'').toLowerCase().trim().replace(/\s+/g,'-'); }
function logoUrl(team){ const slug=slugTeam(team); return slug?`https://content.fantacalcio.it/web/img/team/${slug}.png`:''; }

/* ===== rendering storico ===== */
const root = document.getElementById('storico-root');
const loading = document.getElementById('storico-loading');
const totAsteEl = document.getElementById('tot-aste');

function groupByRole(players){
  const by = {P:[],D:[],C:[],A:[]};
  (players||[]).forEach(g=>{
    const r = (g.ruolo||'').toUpperCase();
    if(by[r]) by[r].push(g); else by['D'].push(g); // fallback
  });
  return by;
}

function renderPlayerRows(list){
  if(!list || list.length===0) {
    return `<tr><td colspan="3" class="text-muted">Nessun giocatore</td></tr>`;
  }
  return list.map(g=>{
    const logo = logoUrl(g.squadraReale);
    const costo = (g.creditiSpesi ?? g.crediti ?? 0);
    return `
      <tr>
        <td>${g.nome || ''}</td>
        <td>
          ${logo ? `<img src="${logo}" alt="" style="width:18px;height:18px;object-fit:contain;vertical-align:-3px;margin-right:6px;">` : ''}
          ${g.squadraReale || ''}
        </td>
        <td class="text-end">${costo}</td>
      </tr>`;
  }).join('');
}

function roleBadge(letter){ return `<span class="role-badge role-${letter}">${letter}</span>`; }

function renderTeam(sq){
  const giocatori = sq.giocatori || [];
  const by = groupByRole(giocatori);
  const counts = { P: by.P.length, D: by.D.length, C: by.C.length, A: by.A.length };

  return `
  <div class="card mb-3">
    <div class="card-header d-flex justify-content-between align-items-center">
      <strong>${sq.nome || '—'}</strong>
      <div class="league-head-badges">
        <span class="mini-pill"><span class="role-badge role-P me-1" style="width:22px;height:22px;border-radius:6px;font-size:.8rem;">P</span> ${counts.P}</span>
        <span class="mini-pill"><span class="role-badge role-D me-1" style="width:22px;height:22px;border-radius:6px;font-size:.8rem;">D</span> ${counts.D}</span>
        <span class="mini-pill"><span class="role-badge role-C me-1" style="width:22px;height:22px;border-radius:6px;font-size:.8rem;">C</span> ${counts.C}</span>
        <span class="mini-pill"><span class="role-badge role-A me-1" style="width:22px;height:22px;border-radius:6px;font-size:.8rem;">A</span> ${counts.A}</span>
      </div>
    </div>
    <div class="card-body">
      <div class="grid-roles">
        ${['P','D','C','A'].map(r=>`
          <div>
            <div class="d-flex align-items-center gap-2 mb-2">
              ${roleBadge(r)} <strong class="ms-1 mb-0">${r}</strong>
            </div>
            <div class="table-responsive sa-dark">
              <table class="table table-sm table-striped mb-0">
                <thead><tr><th>Giocatore</th><th>Squadra</th><th class="text-end">Spesa</th></tr></thead>
                <tbody>${renderPlayerRows(by[r])}</tbody>
              </table>
            </div>
          </div>
        `).join('')}
      </div>
    </div>
  </div>`;
}

function renderLeague(lg, idx){
  const squads = lg.squadre || lg.teams || [];
  const leagueId = `lg_${lg.id || idx}`;
  return `
  <div class="card mb-3">
    <div class="card-header d-flex justify-content-between align-items-center">
      <div>
        <a class="link-underline link-underline-opacity-0" data-bs-toggle="collapse" href="#${leagueId}" role="button" aria-expanded="true" aria-controls="${leagueId}">
          <strong>${lg.nome || 'Lega'}</strong>
        </a>
        ${lg.alias ? `<small class="text-muted ms-2">(${lg.alias})</small>` : ''}
      </div>
      <span class="badge bg-secondary">Squadre: ${squads.length}</span>
    </div>
    <div id="${leagueId}" class="collapse show">
      <div class="card-body">
        ${squads.length ? squads.map(renderTeam).join('') : '<div class="text-muted">Nessuna squadra.</div>'}
      </div>
    </div>
  </div>`;
}

function renderAdmin(adm, i){
  const leghe = adm.leghe || [];
  const adminId = `adm_${i}`;
  return `
  <div class="adm-card card shadow-sm">
    <div class="card-header d-flex justify-content-between align-items-center">
      <div>
        <a class="link-underline link-underline-opacity-0" data-bs-toggle="collapse" href="#${adminId}" role="button" aria-expanded="true" aria-controls="${adminId}">
          <strong>${adm.email || adm.username || '—'}</strong>
        </a>
      </div>
      <span class="badge bg-info text-dark">Aste: ${leghe.length}</span>
    </div>
    <div id="${adminId}" class="collapse show">
      <div class="card-body">
        ${ leghe.length ? leghe.map((lg,idx)=>renderLeague(lg, idx)).join('') : '<div class="text-muted">Nessuna lega creata.</div>' }
      </div>
    </div>
  </div>`;
}

async function loadStorico(){
  try{
    loading.style.display = 'block';
    root.innerHTML = '';
    const res = await fetch('/superadmin/storico', { cache: 'no-store' });
    if(!res.ok){ root.innerHTML = '<div class="alert alert-danger">Errore nel caricamento.</div>'; return; }
    const data = await res.json();
    const admins = data?.admins || data || [];

    // Totale leghe = somma leghe per admin
    const tot = admins.reduce((acc,a)=>acc + ((a.leghe||[]).length), 0);
    totAsteEl.textContent = tot;

    root.innerHTML = admins.length
      ? admins.map((a,i)=>renderAdmin(a,i)).join('')
      : '<div class="text-muted">Nessun dato disponibile.</div>';

  } catch(e){
    console.error(e);
    root.innerHTML = '<div class="alert alert-danger">Errore inatteso.</div>';
  } finally {
    loading.style.display = 'none';
  }
}

document.getElementById('btnReloadStorico').addEventListener('click', loadStorico);
document.addEventListener('DOMContentLoaded', loadStorico);
</script>
}
